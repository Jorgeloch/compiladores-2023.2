Package cida;

Helpers
  tudo = [0 .. 0xFF];
  digito = ['0' .. '9'];
  maiusculo = ['A' .. 'Z'];
  minusculo = ['a' .. 'z'];
  letra =  [maiusculo + minusculo];
  espaco = ' ';
  cr = 13;
  nl = 10;
  tab = 9;
  eol = (cr nl | cr | nl);
  aspa_dupla = 34;
  aspa_simples = 39;

Tokens
  ponto = '.';
  virgula = ',';
  code = 'code';
  tipo_number = 'number';
  tipo_answer = 'answer';
  tipo_symbol = 'symbol';
  parentese_e = '(';
  parentese_d = ')';
  colchete_e = '[';
  colchete_d = ']';
  menos = '-';
  mais = '+';
  multiplicacao = '*';
  divisao = '/';
  modulo = '%';
  atribuicao = '<<';
  igualdade = '==';
  diferente = '!=';
  menor_igual = '<=';
  maior_igual = '>=';
  menor = '<';
  maior = '>';
  negacao = 'not';
  and = 'and';
  or = 'or';
  xor = 'xor';
  as = 'as';
  long = 'long';
  in = 'in';
  case = 'case';
  that = 'that';
  considering = 'considering';
  from = 'from';
  to = 'to';
  by = 'by';
  do = 'do';
  unalterable = 'unalterable';
  alterable = 'alterable';
  vector = 'vector';
  inicio = 'start';
  fim = 'finish';
  capture = 'capture';
  show = 'show';
  yes = 'yes';
  no = 'no';
  comentario_bloco = '{-' tudo* '-}';
  comentario_linha = '--' (digito | letra | espaco)* eol;
  number = ((digito)+ | (digito)+ '.' (digito)+);
  symbol = aspa_simples [tudo - aspa_simples] aspa_simples;
  symbol_vector = aspa_dupla ([tudo - aspa_dupla])* aspa_dupla;
  id = (letra)+;
  vazio = (eol | tab | espaco)+;

Ignored Tokens
  comentario_linha,
  comentario_bloco,
  vazio;

