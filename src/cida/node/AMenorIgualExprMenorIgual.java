/* This file was generated by SableCC (http://www.sablecc.org/). */

package cida.node;

import cida.analysis.*;

@SuppressWarnings("nls")
public final class AMenorIgualExprMenorIgual extends PExprMenorIgual
{
    private PExprMenorIgual _exprMenorIgual_;
    private TMenorIgual _menorIgual_;
    private PExprDiferente _exprDiferente_;

    public AMenorIgualExprMenorIgual()
    {
        // Constructor
    }

    public AMenorIgualExprMenorIgual(
        @SuppressWarnings("hiding") PExprMenorIgual _exprMenorIgual_,
        @SuppressWarnings("hiding") TMenorIgual _menorIgual_,
        @SuppressWarnings("hiding") PExprDiferente _exprDiferente_)
    {
        // Constructor
        setExprMenorIgual(_exprMenorIgual_);

        setMenorIgual(_menorIgual_);

        setExprDiferente(_exprDiferente_);

    }

    @Override
    public Object clone()
    {
        return new AMenorIgualExprMenorIgual(
            cloneNode(this._exprMenorIgual_),
            cloneNode(this._menorIgual_),
            cloneNode(this._exprDiferente_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMenorIgualExprMenorIgual(this);
    }

    public PExprMenorIgual getExprMenorIgual()
    {
        return this._exprMenorIgual_;
    }

    public void setExprMenorIgual(PExprMenorIgual node)
    {
        if(this._exprMenorIgual_ != null)
        {
            this._exprMenorIgual_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exprMenorIgual_ = node;
    }

    public TMenorIgual getMenorIgual()
    {
        return this._menorIgual_;
    }

    public void setMenorIgual(TMenorIgual node)
    {
        if(this._menorIgual_ != null)
        {
            this._menorIgual_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._menorIgual_ = node;
    }

    public PExprDiferente getExprDiferente()
    {
        return this._exprDiferente_;
    }

    public void setExprDiferente(PExprDiferente node)
    {
        if(this._exprDiferente_ != null)
        {
            this._exprDiferente_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exprDiferente_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._exprMenorIgual_)
            + toString(this._menorIgual_)
            + toString(this._exprDiferente_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._exprMenorIgual_ == child)
        {
            this._exprMenorIgual_ = null;
            return;
        }

        if(this._menorIgual_ == child)
        {
            this._menorIgual_ = null;
            return;
        }

        if(this._exprDiferente_ == child)
        {
            this._exprDiferente_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._exprMenorIgual_ == oldChild)
        {
            setExprMenorIgual((PExprMenorIgual) newChild);
            return;
        }

        if(this._menorIgual_ == oldChild)
        {
            setMenorIgual((TMenorIgual) newChild);
            return;
        }

        if(this._exprDiferente_ == oldChild)
        {
            setExprDiferente((PExprDiferente) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
