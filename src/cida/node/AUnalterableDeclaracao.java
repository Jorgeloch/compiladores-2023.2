/* This file was generated by SableCC (http://www.sablecc.org/). */

package cida.node;

import cida.analysis.*;

@SuppressWarnings("nls")
public final class AUnalterableDeclaracao extends PDeclaracao
{
    private TUnalterable _unalterable_;
    private PTipoBase _tipoBase_;
    private TId _id_;
    private PAtribuicaoOpcional _atribuicaoOpcional_;
    private TPonto _ponto_;

    public AUnalterableDeclaracao()
    {
        // Constructor
    }

    public AUnalterableDeclaracao(
        @SuppressWarnings("hiding") TUnalterable _unalterable_,
        @SuppressWarnings("hiding") PTipoBase _tipoBase_,
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") PAtribuicaoOpcional _atribuicaoOpcional_,
        @SuppressWarnings("hiding") TPonto _ponto_)
    {
        // Constructor
        setUnalterable(_unalterable_);

        setTipoBase(_tipoBase_);

        setId(_id_);

        setAtribuicaoOpcional(_atribuicaoOpcional_);

        setPonto(_ponto_);

    }

    @Override
    public Object clone()
    {
        return new AUnalterableDeclaracao(
            cloneNode(this._unalterable_),
            cloneNode(this._tipoBase_),
            cloneNode(this._id_),
            cloneNode(this._atribuicaoOpcional_),
            cloneNode(this._ponto_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAUnalterableDeclaracao(this);
    }

    public TUnalterable getUnalterable()
    {
        return this._unalterable_;
    }

    public void setUnalterable(TUnalterable node)
    {
        if(this._unalterable_ != null)
        {
            this._unalterable_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._unalterable_ = node;
    }

    public PTipoBase getTipoBase()
    {
        return this._tipoBase_;
    }

    public void setTipoBase(PTipoBase node)
    {
        if(this._tipoBase_ != null)
        {
            this._tipoBase_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tipoBase_ = node;
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public PAtribuicaoOpcional getAtribuicaoOpcional()
    {
        return this._atribuicaoOpcional_;
    }

    public void setAtribuicaoOpcional(PAtribuicaoOpcional node)
    {
        if(this._atribuicaoOpcional_ != null)
        {
            this._atribuicaoOpcional_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._atribuicaoOpcional_ = node;
    }

    public TPonto getPonto()
    {
        return this._ponto_;
    }

    public void setPonto(TPonto node)
    {
        if(this._ponto_ != null)
        {
            this._ponto_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ponto_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._unalterable_)
            + toString(this._tipoBase_)
            + toString(this._id_)
            + toString(this._atribuicaoOpcional_)
            + toString(this._ponto_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._unalterable_ == child)
        {
            this._unalterable_ = null;
            return;
        }

        if(this._tipoBase_ == child)
        {
            this._tipoBase_ = null;
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._atribuicaoOpcional_ == child)
        {
            this._atribuicaoOpcional_ = null;
            return;
        }

        if(this._ponto_ == child)
        {
            this._ponto_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._unalterable_ == oldChild)
        {
            setUnalterable((TUnalterable) newChild);
            return;
        }

        if(this._tipoBase_ == oldChild)
        {
            setTipoBase((PTipoBase) newChild);
            return;
        }

        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._atribuicaoOpcional_ == oldChild)
        {
            setAtribuicaoOpcional((PAtribuicaoOpcional) newChild);
            return;
        }

        if(this._ponto_ == oldChild)
        {
            setPonto((TPonto) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
