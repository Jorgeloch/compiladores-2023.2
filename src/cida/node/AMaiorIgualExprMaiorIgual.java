/* This file was generated by SableCC (http://www.sablecc.org/). */

package cida.node;

import cida.analysis.*;

@SuppressWarnings("nls")
public final class AMaiorIgualExprMaiorIgual extends PExprMaiorIgual
{
    private PExprMaiorIgual _exprMaiorIgual_;
    private TMaiorIgual _maiorIgual_;
    private PExprMaior _exprMaior_;

    public AMaiorIgualExprMaiorIgual()
    {
        // Constructor
    }

    public AMaiorIgualExprMaiorIgual(
        @SuppressWarnings("hiding") PExprMaiorIgual _exprMaiorIgual_,
        @SuppressWarnings("hiding") TMaiorIgual _maiorIgual_,
        @SuppressWarnings("hiding") PExprMaior _exprMaior_)
    {
        // Constructor
        setExprMaiorIgual(_exprMaiorIgual_);

        setMaiorIgual(_maiorIgual_);

        setExprMaior(_exprMaior_);

    }

    @Override
    public Object clone()
    {
        return new AMaiorIgualExprMaiorIgual(
            cloneNode(this._exprMaiorIgual_),
            cloneNode(this._maiorIgual_),
            cloneNode(this._exprMaior_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMaiorIgualExprMaiorIgual(this);
    }

    public PExprMaiorIgual getExprMaiorIgual()
    {
        return this._exprMaiorIgual_;
    }

    public void setExprMaiorIgual(PExprMaiorIgual node)
    {
        if(this._exprMaiorIgual_ != null)
        {
            this._exprMaiorIgual_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exprMaiorIgual_ = node;
    }

    public TMaiorIgual getMaiorIgual()
    {
        return this._maiorIgual_;
    }

    public void setMaiorIgual(TMaiorIgual node)
    {
        if(this._maiorIgual_ != null)
        {
            this._maiorIgual_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._maiorIgual_ = node;
    }

    public PExprMaior getExprMaior()
    {
        return this._exprMaior_;
    }

    public void setExprMaior(PExprMaior node)
    {
        if(this._exprMaior_ != null)
        {
            this._exprMaior_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exprMaior_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._exprMaiorIgual_)
            + toString(this._maiorIgual_)
            + toString(this._exprMaior_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._exprMaiorIgual_ == child)
        {
            this._exprMaiorIgual_ = null;
            return;
        }

        if(this._maiorIgual_ == child)
        {
            this._maiorIgual_ = null;
            return;
        }

        if(this._exprMaior_ == child)
        {
            this._exprMaior_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._exprMaiorIgual_ == oldChild)
        {
            setExprMaiorIgual((PExprMaiorIgual) newChild);
            return;
        }

        if(this._maiorIgual_ == oldChild)
        {
            setMaiorIgual((TMaiorIgual) newChild);
            return;
        }

        if(this._exprMaior_ == oldChild)
        {
            setExprMaior((PExprMaior) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
